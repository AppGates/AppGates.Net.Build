<Project>
 
  <PropertyGroup>
    <Nuget_AutoPushEnabled Condition="'$(Nuget_AutoPushEnabled)' == ''">true</Nuget_AutoPushEnabled>
    <Nuget_AutoPushPublishLevels Condition="'$(Nuget_AutoPushPublishLevels)' == ''">global</Nuget_AutoPushPublishLevels>

  </PropertyGroup>

  <!--gitlab-->
  <PropertyGroup>
    <Nuget_AutoPush_Gitlab_ServerUrl Condition="'$(Nuget_AutoPush_Gitlab_ServerUrl)' == ''">$(CI_SERVER_URL)</Nuget_AutoPush_Gitlab_ServerUrl>
    <Nuget_AutoPush_Gitlab_Project Condition="'$(Nuget_AutoPush_Gitlab_Project)' == ''">$(CI_PROJECT_ID)</Nuget_AutoPush_Gitlab_Project>
    <Nuget_AutoPush_Gitlab_Project_Registry Condition="'$(Nuget_AutoPush_Gitlab_Project)' != ''">$(Nuget_AutoPush_Gitlab_ServerUrl)/api/v4/projects/$(Nuget_AutoPush_Gitlab_Project)/packages/nuget/index.json</Nuget_AutoPush_Gitlab_Project_Registry>

    
    <Nuget_AutoPush_Gitlab_Username
      Condition="'$(Nuget_AutoPush_Gitlab_Username)' == ''">$(CI_DEPLOY_USER)</Nuget_AutoPush_Gitlab_Username>

    <Nuget_AutoPush_Gitlab_Username
      Condition="'$(Nuget_AutoPush_Gitlab_Username)' == ''">PushUser</Nuget_AutoPush_Gitlab_Username>
    
    <Nuget_AutoPush_Gitlab_Password
     Condition="'$(Nuget_AutoPush_Gitlab_Password)' == ''">$(CI_DEPLOY_PASSWORD)</Nuget_AutoPush_Gitlab_Password>

    <Nuget_AutoPush_Gitlab_Password
      Condition="'$(Nuget_AutoPush_Gitlab_Password)' == ''">$(CI_JOB_TOKEN)</Nuget_AutoPush_Gitlab_Password>

  </PropertyGroup>
  <ItemGroup Condition="'$(Nuget_AutoPush_Gitlab_Project_Registry)' != ''">
    <Nuget_AutoPushSource Include="AutoPush_Gitlab_Internal">
      <Address>$(Nuget_AutoPush_Gitlab_Project_Registry)</Address>
      <PublishLevel>internal</PublishLevel>
      <Username>$(Nuget_AutoPush_Gitlab_Username)</Username>
      <Password>$(Nuget_AutoPush_Gitlab_Password)</Password>
    </Nuget_AutoPushSource>
  </ItemGroup>
  <!--nuget org-->
  <PropertyGroup>
    <NugetOrgFeed Condition="'$(NugetOrgFeed)' == ''">https://api.nuget.org/v3/index.json</NugetOrgFeed>
  </PropertyGroup>
  <ItemGroup Condition="'$(Nuget_AutoPush_NugetOrgToken)' != ''">
    <Nuget_AutoPushSource Include="AutoPush_NugetOrg">
      <Address>$(NugetOrgFeed)</Address>
      <PublishLevel>global</PublishLevel>
      <ApiKey>$(Nuget_AutoPush_NugetOrgToken)</ApiKey>
    </Nuget_AutoPushSource>
  </ItemGroup>
  
  <!--Default Push Source-->
  <ItemGroup Condition="'$(Nuget_AutoPush_DefaultSource_Address)' != ''">
    <Nuget_AutoPushSource Include="AutoPush_DefaultSource">
      <Address>$(Nuget_AutoPush_DefaultSource_Address)</Address>
      <Username Condition="'$(Nuget_AutoPush_DefaultSource_Username)' != ''">$(Nuget_AutoPush_DefaultSource_Username)</Username>
      <Password Condition="'$(Nuget_AutoPush_DefaultSource_Password)' != ''">$(Nuget_AutoPush_DefaultSource_Password)</Password>
      <ApiKey Condition="'$(Nuget_AutoPush_DefaultSource_ApiKey)' != ''">$(Nuget_AutoPush_DefaultSource_ApiKey)</ApiKey>
    </Nuget_AutoPushSource>
  </ItemGroup>


  <Target Name="LogAutoPushSettings"  BeforeTargets="AutoPush" Condition="'$(IsPackable)' == 'true'">
    <Message Importance="$(BuildSdkLogPriority)" Text="Nuget_AutoPushEnabled is set to: '$(Nuget_AutoPushEnabled)'. To activate it set the environment variable or msbuild property Nuget_AutoPushEnabled to true."></Message>
    <Message Condition="'$(Nuget_AutoPushEnabled)' == 'true' AND '@(Nuget_AutoPushSource)' != ''" Importance="$(BuildSdkLogPriority)" Text="Pushing to sources '@(Nuget_AutoPushSource)' you can change it by adding items to the 'Nuget_AutoPushSource' item group. The identity is the name of the source, possible MetaData Items are: Address, Username/Password or ApiKey."></Message>
  </Target>

  <Target Name="AutoPush" AfterTargets="Pack" Condition="'$(Nuget_AutoPushEnabled)' == 'true' AND '$(IsPackable)' == 'true'">

    <ItemGroup>
      <Nuget_PushSource Condition="$(Nuget_AutoPushPublishLevels.Contains('%(Nuget_AutoPushSource.PublishLevel)'))" Include="@(Nuget_AutoPushSource->HasMetadata('PublishLevel'))"/>
    </ItemGroup>
  </Target>

  <Target Name="Push" AfterTargets="AutoPush" Condition="'$(IsPackable)' != 'false'">

    <Message Importance="high" Text="Pushing to '%(Nuget_PushSource.Address)'..." />
    <ItemGroup>
      <Nuget_PushSource_WithBasicAuth Include="@(Nuget_PushSource->HasMetadata('Password'))"/>
      <Nuget_PushSource_WithApiKeyAuth Include="@(Nuget_PushSource->HasMetadata('ApiKey'))"/>
      <Nuget_PushSource_WithNoAuth Include="@(Nuget_PushSource)" Exclude="@(Nuget_PushSource_WithBasicAuth);@(Nuget_PushSource_WithApiKeyAuth)"/>
    </ItemGroup>

    <PropertyGroup>
      <Nuget_Push_PackagePath>$(PackageOutputPath.TrimEnd('\').TrimEnd('/'))\$(PackageId).$(PackageVersion).nupkg</Nuget_Push_PackagePath>
      <PushWithApiKeyCommand>dotnet nuget push $(Nuget_Push_PackagePath) --skip-duplicate --source "%(Nuget_PushSource_WithApiKeyAuth.Address)" --api-key "%(Nuget_PushSource_WithApiKeyAuth.ApiKey)" </PushWithApiKeyCommand>
      <PushWithConfigCommand>dotnet nuget push $(Nuget_Push_PackagePath) --skip-duplicate --source "%(Nuget_PushSource_WithBasicAuth.Identity)"</PushWithConfigCommand>
      <PushWithNoAuthCommand>dotnet nuget push $(Nuget_Push_PackagePath) --skip-duplicate --source "%(Nuget_PushSource_WithNoAuth.Address)"</PushWithNoAuthCommand>
      <PushNugetConfigPath>$(IntermediateOutputPath)\nuget.config</PushNugetConfigPath>
    </PropertyGroup>

    <!--with config (basic auth)-->
    <Delete Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''" Files="$(PushNugetConfigPath)"/>

    <Exec Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''"  WorkingDirectory="$(IntermediateOutputPath)"
          Command="dotnet new nugetconfig" ></Exec>

    <Exec Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''"  WorkingDirectory="$(IntermediateOutputPath)"
          Command="dotnet nuget add source %(Nuget_PushSource_WithBasicAuth.Address) -n %(Nuget_PushSource_WithBasicAuth.Identity) -u %(Nuget_PushSource_WithBasicAuth.Username) -p %(Nuget_PushSource_WithBasicAuth.Password) --store-password-in-clear-text" ></Exec>

    <Message Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''"  Importance="high" Text="Generated config '$(PushNugetConfigPath)':"/>
    <Message Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''"  Importance="high" Text="$([System.IO.File]::ReadAllText('$(PushNugetConfigPath)'))"/>

    <Exec Condition="'@(Nuget_PushSource_WithBasicAuth)' != ''" WorkingDirectory="$(IntermediateOutputPath)"
          Command="$(PushWithConfigCommand)" />

    <!--with api key-->
    <Exec Condition="'@(Nuget_PushSource_WithApiKeyAuth)' != ''"
          Command="$(PushWithApiKeyCommand)" />

    <!--without auth-->
    <Exec Condition="'@(Nuget_PushSource_WithNoAuth)' != ''"
          Command="$(PushWithNoAuthCommand)" />
  </Target>
</Project>