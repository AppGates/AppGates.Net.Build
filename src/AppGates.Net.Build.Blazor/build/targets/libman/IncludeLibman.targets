<Project>
	<Import Project="FixLibmanRestore.targets"/>

	<!--Include libman.json in package under "info" folder-->
	
	<ItemGroup>
		<Content Remove="$(LibManJsonFilePath)" />
		<!--<None Remove="$(LibManJsonFilePath)" />-->
		<None Include="$(LibManJsonFilePath)" Pack="true" IncludeInPackage="true" PackagePath="info/"/>
		<None Update="$(LibManJsonFilePath)" Pack="true" IncludeInPackage="true" PackagePath="info/"/>
	</ItemGroup>

	<!--New workaround to reference packages within build packages:
	1. Set the reference as dependency on the build package project (see AppGates.Net.Build.Blazor.csproj)
	2. Reference the dependency within the target with GeneratePathProperty=true, don't include any asset (which doesn't get pulled anyway)
	3. Import the build/[package].props and build /[package].targets based on the generated path property.-->
	<ItemGroup>
		<PackageReference Include="Microsoft.Web.LibraryManager.Build" Version="*"
						  GeneratePathProperty="true" IncludeAssets="None" PrivateAssets="all" />
	</ItemGroup>
	<PropertyGroup>
		<LibmanPackageTargetPathWithoutExtension>$(PkgMicrosoft_Web_LibraryManager_Build)\build\Microsoft.Web.LibraryManager.Build</LibmanPackageTargetPathWithoutExtension>
	</PropertyGroup>
	<Import Project="$(LibmanPackageTargetPathWithoutExtension).props" />

	<!--Not sure if necessary, but ensure that libman restore runs before typescript build-->
	<PropertyGroup>
		<CompileTypeScriptDependsOn>$(LibraryManagerRestore);$(CompileTypeScriptDependsOn)</CompileTypeScriptDependsOn>
	</PropertyGroup>

	<PropertyGroup>
		<LibManProxyServer Condition="'$(LibManProxyServer)' == ''"></LibManProxyServer>
	</PropertyGroup>

	<Target Name="SetLibManProxy" Condition="'$(LibManProxyServer)' != ''" BeforeTargets="LibraryManagerRestore">
		<PropertyGroup>
			<LibManConfigurationFilePath>$(HOME)\.librarymanager\libman.config.json</LibManConfigurationFilePath>
			<LibManConfiguration>
				{
				"config": {
				"http_proxy": "$(LibManProxyServer)",
				"https_proxy": "$(LibManProxyServer)"
				}
				}
			</LibManConfiguration>
		</PropertyGroup>
		<Message Text="Write LibMan Config: $(LibManConfiguration) to $(LibManConfigurationFilePath)" Importance="high"/>
		<WriteLinesToFile File="$(LibManConfigurationFilePath)" Lines="$(LibManConfiguration.Trim())"/>

	</Target>

	<Import Project="$(LibmanPackageTargetPathWithoutExtension).targets" />

</Project>